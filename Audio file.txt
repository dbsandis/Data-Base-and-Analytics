Audio file
Dubois Center at UNC Charlotte Center City 4.m4a
Transcript
Speaker 1
I'm making money.
Speaker 2
Imaginable and effective demand. You can consider those criteria. So when you think about sales, right what? Information criteria we use to receive the. Information of ourselves. Products, right. And what's the sales of products, so therefore products? Or what the sales of let's say. North region, right or North Region, so that's good. The location is another could be another. So or what's the? Sales of product supplied by a particular supplier if like. That I just want. Expanded discussion. So the supplier in that, but depending on what's the nature of the supply chain management supplier, definitely. So that is demanded. So what are the criteria typically used to retrieve the data right, to organize, how to organize the data that's. And then the fact would be the measures actual values or measures in case of revenue, then in the fact table we store information, the revenue. Right in case. Sales, we also store the information about, yeah, the sales or even price. Yeah, right. Yes, right. So these are. The measures and these measures are typically numerical measures. We're talking about numerical measures, whereas the dimension tables are typically quality. Tables you're talking about. Products or you're running locations of. Things right? Sales. Month or first quarter and so on. So now seeing. We have this concept with many people and fashionable. Are used to help us organize the data and help us retrieve the data or index the data and facts are the actual values right or measures or storing effects. And if we consider the demand? Especially combinations of two ordinations we can form this.
Speaker 1
Queue or data queues?
Speaker 2
The queues can be organized as a hierarchy. As you can see here. Now we have 14 layers in this case. Date or date item or product. Location supplier these are the different areas in this queue. We can see we can consider. All four dimensions or we can only consider. Three, any of the three dimensions, any combination of three-dimensional or or any combination of two-dimensional or single dimension or normal dimension. Right. So the reason I say this is a hierarchy is that think about sales, think about sales. If I look at the bottom. Right. And this involves the most demand here. Right. This give U.S. sales of what? Of this. Particular time, let's say right particular time frame specific products and location and supplier. Basically you have specified the range of all of these values and that's the information gap. Like seal you gap, that's the combination the seal has been already constrained by the values of. All these quantum. Sales of. First of all, let's say first month of the last quarter of 2023, let's say iPhone 15.
Speaker 4
Charlotte, NC.
Speaker 2
Garlic or apple, right? Yeah. There's no other supplier offer for in.
Speaker
That case.
Speaker 2
So that's kind of the most restrictive case, right? This is the and. We can also. Look at sales. We don't care about, let's say, the buyer. Because we know. Assuming that all. IPhone 15 provided supplied by Apple, so we don't have time item and location. See the sales of these combinations. You can have any other combinations. And so on. Or two of them. So basically you can see this is a this kind of organization make it very flexible, allow users to generate query. Great, right. Granularity. From most people level. Right to the most cross level so at. The very top, that's just all. Every everything from the data warehouse, right? Regardless of the production date, supplier or location. So that's the. We can have this queue and so basically we call the the all inclusive tool as the apex apex keyboard. It's really the top. It's basically including everybody. And whereas the the bottom one, this is the most restrictive. One this is. The most restrictive 1 involves the four divisions. We call it 4D14 keyword. This is the base keyboard because this most people most fine grained power right? Because all of us have been involved in this. You have specified all the criteria and when you determine the saving in this case we can from this figure we can easily see that user the data warehouse allow the users to query the sales at any level of detail, right? Very flexible. And you can also this also allows users to perform. Some online and equal processing. Which means that you can.
Speaker
I will.
Speaker 2
And then. So this these this is the cue. And you can see that these are three dimensions. You can type and the product and in this case the facts are stored in each cell. The value you see is on. The facts in the facts table measures. Right, this is a. 3D. Right queue queue view. So the cube is actually established, virtually established virtually when we store the data, we still store data in A2 dimensional table, right? We can store in two. This is how the data is stored. As you can see each of these correspond to one of the columns and index. Since you can. Expect that if the Theta these people get huge. Huge, yeah, hugely, then we need to index the data right to support faster retrieval. These dimensions are will be used to create indexes, right? This will be created use create indexes. Basically, let's say we create index by product. If you search product 4711 then if you type in the query for and then the product equals 4711 then all the information of the 4711 will be immediately. Retreat so that you don't have to go through complicated process to do it. So this is the the how we map the queue type of view to the two demand table. You can see this. Is the. Measure from the fact table the 1st. 3 columns are all from the different tables. And to just help you understand this how to integrate. The values in Q and how do you really be able to interpret the queue? And let's just do some simple exercise and this is again. 3D cube. But it has been sliced into different layers. OK. These are the. This demand in the products and this demand is big. This demand is stick to, let's say from January 1st to January 4th. The top one is January 1st and then to the January 4th. This cell basically tells us this is the. This value corresponds to. What's the value for? The demand is that which delay. Is Chris gone through this value? And the sales is, let's say this sales is from which which product about which product and which? And which day? Yeah, yeah, that's what it tells us. Yeah, I think you can. You're doing a great job. So yeah, just that then you can greatly answer these two questions.
Speaker 4
One second, no third, third.
Speaker 1
Yeah, yeah.
Speaker 4
Yeah, yeah.
Speaker 2
If you have any questions, feel free to. Otherwise I'm going to move on so. The correct answers. Yeah. I just, yeah, as I said here is date. So each day is a slice. So kind of laid on top of each other, so date. From here to there.
Speaker 4
We we put, we make the table and we that table will then be shifted to the queue and when we want to retrieve it that table will come out like that table. Is that correct?
Speaker 2
No. You can envision actually the Q. Virtually envision the queue. So that, yeah, you can even envision not just the 3D queue, could be 12 DQ. But you don't have to create this queue physically. You can just envision there's a queue. There they just for illustration.
Speaker 4
OK, so all this data is compiled together as a visual cue that when you get that information it. Will pop up that.
Speaker 2
So again, this is a cube, right? And then as far as how data is stored, it could be in this way into it actually stored in a table. And this is how we may store information in this queue, right. Internally. Yeah. In computer, we can use this one to store the one. And we can view, let's say this. Is the visualization how we may visualize? The data just wait for it for industrial. Yeah, here are the. Lab operations so that truth structure really allow us and also the and that's not not not true so. So these are the old app operations how to go to focus. Slice dice, roll up, chew down. Or so we also call it rotate. So these are the common operation you can perform. So we can there are the how visually illustrated these different operations. This is a pivoting. Basically you change the orientation. Of the cube. Right facing. Originally the product is so in this direction. That you can. Turn it around, it becomes like it shows up in the horizontal. So depending on how you would like to view data, that's kind of pivoting or rotating. And this is again just an example of a puberty, so you can. Yeah, just like somebody can. Do the tricks and then they can. Has done right to still stand on the floor, right? That's still the same person, but they kind of. Turn it around. So that's how we keep the data. Then the slide. This is life. What slice does is this is cut and thin. Slice right. You set a value for one demand. Then you will get a slice. Say there are a lot of products like right lot of products. Now I just specify the product is iPhone 15 let's say Pro Max right and then you will get. This life. Everything in this slide is about iPhone 15 Pro Max and regardless of the region and time, so all the sales about. The slice you expanded the value for one delay, one delay. In this case it's product. Where is the. This is the four slides for region. Similar idea, right? For dice. You specify the value for what? Two or more demands 2 or more demand. You will get that, which means you need to. Cut twice at least. Just like we cut the dice. Right, you have to. Make the two cuts. One cut is along the product demand and the other cut along. The region demand. This means this will give us the sales for. Certain products from certain regions, right, we kind of a constraint in our criteria like the sales from this nation and about this product. OK. That's the. That's the. Dice this this is very these are very. Common right you can. Expect that the data in the from data warehouse can be queried. By performing these slicing or dicing. And data, we call it data filtering. Essentially, once you specify the criteria, say iPhone 15 Pro Max. All the other products are irrelevant, you only retrieve the data about. I don't think that's why. I call it the future future pressure. And then we have this row up drill down before we introduce the row row up and drill down. We need to kind of introduce this hierarchical structure. And all the. Yeah, we can create this part. In real world there. Are always hierarchy, right? There are always hierarchy. We can have this from Department of College to university or even the UNC system has a top colleges so that under the system on router there are different campuses and then each have different department and so on. So this is the hierarchy. The the higher move up to the hierarchy the the higher. Coarse grain, the course of the grain and the higher level aggregation and the lower the. Move down the. Hierarchy. The higher granularity like again this is another. Hierarchy. So I just this is not a standard one. I think that there are and the students just want to use something they're familiar with then. This is how you calculate return on investment by using assets. And the profit. Margin and asset turnover and each of the variable need to be calculated by using combination of other variables and then if we consider how to calculate the return investment as. Yeah, we have kind of a viewer like this in the hierarchy, right, in order to get this, you need to know these value of these two variables in order to compute this, you need to know the value of these two variables. So that we can. Also form, but that's just some size and this. Is the typical one. Right now the product we have the. Product line and. All products, right and this is also from a hierarchy. So the row up drill down, what it does is that you can go from the more detailed level more fine grained level to more aggregate level this. You can also go from the more. Every level to more detail level, we call this like drill down. So there's the when you search information it it really allow you to flexibly move from different levels of granularity. But for me to grow up and. So this again illustrates the drill down. And this is the entire. Map of the US and then. We'll drill down to. Which state is this? South Carolina and this is yes.
Speaker 1
So gradually, dual dual number and that's the.
Speaker 2
And we can also do it.
Speaker 1
In the opposite direction, that would be the so.
Speaker 2
We can perform these operations and so far we assume the database data warehouse is available and ready to use. Right. And let's take one step back. You need to design you are tasked with. Designing the data warehouse. And you can imagine that before instead of directly jumping to implemented, their warehouse will always come up with a schema right conceptual schema. I just lay out the blueprint. Just like review the house I need. To first draw this blueprint of the data warehouse. That's why. Introduce the model, the data warehouse modeling will help us to create the schema of the data warehouse. You can get an idea what kind of data will be captured data warehouse and. What are the? Are later. So there are different. Kind of modeling methods, different modeling methods, and. These are the very popular ones * schema. Snowflake and factory constellations. And star schema. As you can see that. It just looks like it's dark and because the. Center right. So architecture always. Center what is in the center in this case? And surrounding it by. A collection of images. Table this is called * schema. With the back table in the middle center and surrounded by a standard demand table, that's.
Speaker
OK.
Speaker 2
And in this schema, as you can see that in addition to the the layout of the demanded table at the back table. For each of the tables, we also providing more details. It's not just about, let's say this is. A region. This is the product we. Also provide actually used to describe. The demand and facts. So therefore, when you create a data warehouse, each dimension table and the fact table. In addition to. The labels of the table or name of the table you also.
Speaker 1
Providing the attribute to describe the table.
Speaker 2
Right. Just like your database. Each entity should be described with a set of attributes. City students.
Speaker 1
Names humanity and the program, and so on.
Speaker 2
So that's the. And for the fact table with more facts. There are factories table we I don't think we don't have to go there, but typically we will see facts in the fact table as well.
Speaker 5
There, there are indeed the factories.
Speaker 2
And then stars. And another one. Yeah, this is a give you an example of this. Medium and high. You can see each of. The table has the attributes used. To describe each dimension. And in this fact table we have this fact. This is sales. This is about sales and therefore we understand the sales. And for. Students. How many students have never taken database? Course before raise. Your hand please.
Speaker
OK.
Speaker 2
Seems seems like 2/3 of students have completed database course. Can you tell me them where do they come from? Kids from where from? So yeah, in case other students are curious like this is this is a fact this. Is a fact. But in the fact table, we also incorporate the ID. 'S that identify these are identify just. Think about them as your student ID. Each of them. Their table should also have an ID to identify each instance, say region which will. Have region ID. Each region has. Unique ID. The ID must be unique. OK. And then we kind of incorporate into this fact table. So all all the ID from all of the demands, you just copy them here and this will give you you will have complete answer for this fact table. The attributes in the fact table and these IDs are called what kind of key. It's a foreign here. It's foreign key. Although for this state is also primary key but it's foreign key right? The combination of them will be primary key exactly. Combining all of these will be. But this is a foreign key because. These keys come from another table you can. Integrate that way they are falling to this table. We really borrow them from another table and then the foreign key will help ensure data integrity because any values in between the sales table should be available from let's.
Speaker 1
Say the region.
Speaker 2
Table. You cannot just have a region. Can never show up. You know, that doesn't make sense, right? If you never consider, like, a central central region and you suddenly you have a central here, that doesn't make sense. But. The data will.
Speaker 1
Be bad like.
Speaker 2
And so that this kind of connection really improve integrity and and also here that these numbers means what cardinality right, cardinality cardinality this is a one to many right? One for money, which is basically. Yeah, this is not database course, probably I'll stop here since I mean, I mean not. So you can basically in all the. Regards the assignments or the exam. You can assume that it's always one to many. The one on the many table side and many on. The fact table. Side just put it that way one to many. But you better. Market. This basically means that for each of the. Role like of data from sales people. Yeah, actually, for each. Yeah. For each of the row from field table it corresponds to 1. And only one time. So that's why. It's one to many and if anything. You can look. Injuries for cardinality cardinality table but. This is not database course. Don't worry about that. Just remember that you. Model them as one company, one on the.
Speaker
Table side many.
Speaker 2
On the practical side.
Speaker 4
Yes. One question on exams or or test, are you going to test us on? Like the the symbols for wanna say like a star table. Are you gonna have you gonna? Are you gonna use symbols saying? Is this a mini 2/1? Table or one to main for the symbols it's or you just gonna leave it like this?
Speaker 2
So yeah, this is this is. Do you consider this as symbols?
Speaker 4
No, just just you're disconnecting them.
Speaker 2
Yeah, just connecting them. What do you mean? By symbols, just write down.
Speaker 4
Like the like, the roots. Like for example for for the for the sales table you'll have root to also call them to the timetable to product and the region they'll indicate that is many to 1.
Speaker 2
Yeah, I think, yeah, in, in the example or assignments, you just just to show it. In the figure. As you see. Here that would be sufficient. You don't have to go that because we only have one thing I cannot expect, although I can go much deeper than that. So that to represent the hierarchy, we can represent the. Data, as you can see here. Right we can. Use the two different table to represent it so. This is these are the ID. 'S and as you. Can see these are different cities and each city and state and and actually region. This really shows the hierarchy that way and we can also represent. This is another kind of implicit right hierarchy. Server, we actually list the data by city. We can explicitly. Show the hierarchical relationship. As you can see in the. We have this region ID. And then we put all of them like from city to region to to this column called description and then indicate the parent right? So let's say Charlotte the parent is 7/7. If you look up 7, that's the parent is NC and then if you look at. The parent is 12, right? If you check 12 which is South S region. So this is how we can represent the layers or hierarchy by using. And that's the. Sorry. And and alternatively, we can model the data using. Slow Flake slow flake schema. As you can see that the difference between this and the previous one is what what you. Yeah, seems like more to the demand is demands can have their own demands there could.
Speaker 1
No more.
Speaker 2
Some demand and branching. Out of demand. Not yeah, not not some demand like other demand branching all these demands. Right. So this is that's why it's called Snowflake, right? Each north star. Just yeah, popping out straight. So yeah, for Snow Flake, we know that it has some more shapes at the edge of each of the direction. So this is called we call it. And where do these demand additional demand? Let's look at the example, right. And again, it's about sales. We have product dimension, time demand and this time for the region. We kind of. Decompose the region demand table into multiple tables. City, State and sales region. City, State and you can see the city is directly connected to the sales. And then City has a relationship with state and the state has in turn has a. Relationship with region. So as you can see that this three-dimensional tables. Have relationships. Right. Between them. And the this demanded table that city is not by itself, it's related to other demands. So all these are demanded tables, all these highlighted in purple are demanded tables. In this case these two dimensions, those region and state instead of directly. Back to the fact table. They are connected to the. Imagined table city. So the relationship between. The star Schema and Snowflake schema. Is that we actually normalize the table. If you remember from database course any normalize the table given your table from the start schema and then we generate a slow. So what is localization? I will not go too much into that. So in this class that we don't have time for that but and also you don't have to worry about asking question about ways not written but just for students who have taken database course. They just to give you some connection so that we use the both start streamline and slow. The main schema to represent the same scenario, but how we get here is to normalize the whether the table from the start and that's.
Speaker
How we call it?
Speaker 2
After normalization, there is less. What do you need that less? Covering something unplanned again. So as you can see here for, let's say, CA City, San Francisco, Los Angeles, right there it goes from the California. So now you can see the space is repeated twice and certainly for. CA is always come from. The West region. So this is repeated again if we use the star schema, you're going to see some redundancies and whereas in the snowflakes and then you're going to minimize, try to minimize the redundancy. However, in the downside with Snowflake schema. Is the is is less efficient because in order to get information sometimes you need to join multiple tables. It may not be as efficient as be as the, so this is how we map the. Tables into this. The snowflake schema into the table representation is 1 table right and the state is 1 table. And sales is another table and then. The the sales region is. The table you can see, but redundancy is minimized here. It's really, really nice here, so each table only capture data alone, state, region or city. And that's their trust. This is the third. One so you could use the snow Flake. * And this is a galaxy schema and. What's unique about this one based on your? Two fact tables. You're very shortly 2 back tables, so different fact tables they can share the same tables. This is called Galaxy right. Different system like solar system or kind of joint. From a Galaxy. The different fact table can share same.
Speaker
OK.
Speaker 2
In this case, fact table two has a unique unique dimension fact. Table one can also have. What if, let's say back tape? Table one and two, they share exactly the same demand. All demand the same. Is it still Galaxy schema? The answer is yes, the answer. Is just a special case, just a special case. And you're going to see an example. Here, so sales right three dinner table. And the fact table sales this is second. Fact table purchase. Purchasing involve item and this case and it can also involve region. Steven, this is. Again, there are two fact. Tables and they share some. This is another example of. Yeah, this is the factor consolation. We kind of. Because there are a lot of demand here. That's why you see a lot of keys ideas here. These are the measures and these. Are the different. The main table. This is another fact table. The fact table sales fact table and sales fact table and they share some.
Speaker 4
So would that be more of on on the supply chain side of Galaxy, which will be more in the supply chain side?
Speaker 2
You can put it that way. Yeah, you can put it that way. Yeah. So, right, so. Our lecture is done and the homework is available and we have let's move on to the presentation complete. All the scheduled tasks and if you have any questions about the assignments, I will be happy to answer.
Speaker 6
OK. First of all, we all know that. Is one of the largest ride sharing providers, and while using it has faced many ticketing issues like the flow is very hard. At the initial years, it was not, but after that it expands the whole and the app. So it came to the Uber customer obsession team to reduce the ticket. And, but the team has failed. Should have not been called, so Uber has to come with. With another software so. We come with the code app quota and customer obsession ticket assistant. It automates the tickets directly and it is the main benefit of the Uber and it mainly uses on big data and data big data. And knowing the insights and patterns and things like that. So quota goes to that. So after after that quota? They have solved the.
Speaker 3
Yeah, so code it takes.
Speaker 5
All the shipping information, so this includes like the account of the customer and then also like.
Speaker 3
We were like where the like scheduling like Uber that your driver like, they track how fast you driving and things of that nature it takes. That and like what you wrote in the ticket, like what your issue was. And then it reformats it and then like it takes out words that don't make any sense, like the OR or things of that nature and focuses on words like driver, like, crash stolen, like something of, like, some significance to show like some sort of issue. And then it goes through like sort through the system with all their past tickets that they have like accumulated over time and find similarities to see what. The problem was then they go back and they see if there are any updates in the tickets. See if anything has changed and they go through their system one more time to find out what the possible issue and solution is instead of having like a bunch of people one by one like always with the issue. It's having a lot of workers trying to figure out. Thousands of tickets a day this way. It's like the computer is is the issue with solution which that can be sent? And they. Business helps speed up their process because they're simple issues that have all the time the solution set to the customer and then it goes on from there. But it's also more personalized because if there's some issue that needs more attention then now the employees can focus on those issues and not the random like reoccurring issues that happen all the time. And it's also. Help them limit. The amount of tickets they get because things have like if a bunch of people are reporting they feel unsafe because of drivers speeding. They now can recognize like, hey, this driver. Probably is insane, or they can see what other people, if they notice like that, drivers speeding and stuff they can alert like hey, we need to stop this driver before someone else feels unsafe. We have other issues and just things of that nature and they use the coda system to help like fix their issues, find the solution. And then prevent further.
Speaker 6
And the only disadvantage is after implementing the quota, the layoffs has is very more in the over recently in 2019 that was the only disadvantage because it is a complete automated. So there is no need of more manual. Yeah, that's the only.
Speaker 4
Thank you.
Speaker 2
Thank you, honey. Very interesting.
Speaker
With milligram.
Speaker 2
One question.
Speaker
The the the Uber.
Speaker 4
Information comparing the old and newer, I mean still making statements right?
Speaker 6
Yeah, yeah.




